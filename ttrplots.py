# -*- coding: utf-8 -*-
"""ttrplots.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_pZ0TC7jl-z-6uVDHl4ik8tNOuQctxNN
"""

import csv
import matplotlib.pyplot as plt
import numpy as np
with open("ttr.tsv") as fd:
    rd = csv.reader(fd, delimiter="\t", quotechar='"')
    typecount=[]
    for row in rd:
        typecount.append(int(row[0]))
window = 500
ttr = [x / window for x in typecount]

fig, ax = plt.subplots()  # Create a figure and an axes.
fig.set_size_inches(18.5, 10.5)
ax.yaxis.label.set_size(40)
MATTR = np.round(np.mean(ttr),3)
MATTR_1 = np.round(np.mean(ttr[1:1000]),3)
MATTR_2 = np.round(np.mean(ttr[5001:6000]),3)
MATTR_3 = np.round(np.mean(ttr[15001:16000]),3)
MATTR_4 = np.round(np.mean(ttr[18001:19000]),3)
print(typecount[-5:-1])
print(ttr[-5:-1])
print('MATTR',MATTR)
print(MATTR_1)
print(MATTR_2)
print(MATTR_3)
print(MATTR_4)
ax.plot(ttr[1:1000],'-',color='#000000', linewidth=4, label = 'MATTR = %1.3f (1-1000)'%MATTR_1)  # Plot some data on the axes.
ax.plot(ttr[5001:6000],'--',color='#000000', linewidth=4, label = 'MATTR = %1.3f (5001-6000)'%MATTR_2)  # Plot more data on the axes...
ax.plot(ttr[15001:16000],'-',color='#999999', linewidth=4, label = 'MATTR = %1.3f (15001:16000)'%MATTR_3)  # ... and some more.
ax.plot(ttr[18001:19000],'--',color='#999999', linewidth=4, label = 'MATTR = %1.3f (18001:19000)'%MATTR_4)  # ... and some more.

# ax.plot(ttr[1501:2000],'c.')  # ... and some more.
ax.tick_params(axis='both', which='major', labelsize=24)
ax.set_xlabel('window position index', fontsize=28)  # Add an x-label to the axes.
ax.set_ylabel('TTR (window length =500) ', fontsize=28)  # Add a y-label to the axes.
ax.set_title("TTR values plotted over different window positions", fontsize=28)  # Add a title to the axes.
ax.legend(fontsize=28)  # Add a legend.
plt.ylim(0.6,1)
plt.savefig('MATTR.eps', format='eps', dpi=800)

# plt.plot(ttr)

tokens =[]
types=[]
with open("typetoken.tsv") as tsvfile:
    fd = csv.DictReader(tsvfile, delimiter='\t')
    for row in fd:
        tokens.append(int(row['Tokens']))
        types.append(int(row['Types']))
print(types)
print(tokens)
ttr = np.array(types)/np.array(tokens)

plt.figure(figsize=[18.5,8])
plt.subplot(1,2,1)  # Create a figure and an axes.
plt.plot(tokens, types,'-',color='#000000', linewidth=4,)
plt.tick_params(axis='both', which='major', labelsize=24)
plt.xlabel('Tokens, N (millions)', fontsize=28)  # Add an x-label to the axes.
plt.ylabel('Types, V (millions)', fontsize=28)  # Add an x-label to the axes.
plt.title('TTGR', fontsize=28)
# ax.legend(fontsize=18)  # Add a legend.
plt.grid('True')
plt.subplot(1,2,2)  # Create a figure and an axes.
plt.plot(tokens, ttr,'-',color='#000000', linewidth=4,)
plt.tick_params(axis='both', which='major', labelsize=24)
plt.xlabel('Tokens, N (millions)', fontsize=28)  # Add an x-label to the axes.
plt.ylabel('TTR(N)', fontsize=28)  # Add an x-label to the axes.
plt.title('TTR', fontsize=28)
plt.grid('True')
plt.savefig('tsd1030a.eps', format ='eps', dpi =800)

x = ['Malayalam', 'Finnish','Estonian','Latvian','Lithuanian','Slovak','Czech']
MATTR =[0.806, 0.6, 0.59, 0.59, 0.59, 0.59, 0.57]
plt.figure(figsize=(18.5, 10.5))
plt.bar(x, MATTR, align = 'center', color='#999999') 
plt.tick_params(axis='both', which='major', labelsize=24)
plt.title('MATTR Comparison',fontsize=24) 
plt.ylabel('MATTR', fontsize=24)  # Add an x-label to the axes.
plt.grid('True')
plt.savefig('tsd1030e.eps', format ='eps', dpi =800)

TTR_indian = [0.1083173439, 0.04190987625,0.1520524078,0.03423,0.1128673749,0.1733350194]
TTR_mal= [0.2292837818, 0.2054617829,0.2053901301,0.2051716667,0.2042559838,0.1954513668]
index = np.arange(6)
bar_width = 0.35
fig, ax = plt.subplots(figsize=(30,25))
ttrm = plt.bar(index, TTR_mal, bar_width, label="TTR (Malayalam)", color='#333333')
ttrother = plt.bar(index+bar_width, TTR_indian, bar_width, label="TTR (DoE-CIIL)", color='#999999')
plt.tick_params(axis='both', which='major', labelsize=45)
ax.set_yticks(ticks=[0,0.05,0.10,0.15,0.20,0.25,0.30,0.35,0.40,0.45])
plt.ylabel('TTR', fontsize=45)
ax.set_xticks(index + bar_width/2)
ax.set_xticklabels(['\nMarathi\n(1.88 M)', '\nHindi\n(2.98 M)','\nTamil\n(2.98 M)','\nEnglish\n(3.00 M)','\nKannada\n(3.04 M)','\nTelugu\n(3.66 M)'], fontsize=55)
ax.legend(fontsize=45)
plt.savefig('tsd1030c.eps', format ='eps', dpi =800)

TTR_euro = [0.1577658398, 0.1528783911,0.1283593674,0.1435530388,0.05382458378,0.05875449995]
TTR_mal= [0.4447582556, 0.4447299501,0.429205218,0.4288741559,0.3982420642,0.3929761083]

index = np.arange(6)
bar_width = 0.35
fig, ax = plt.subplots(figsize=(30,25))
ttrm = plt.bar(index, TTR_mal, bar_width, label="TTR (Malayalam)", color='#333333')
ttrother = plt.bar(index+bar_width, TTR_indian, bar_width, label="TTR (European Union Corpus)", color='#999999')
plt.tick_params(axis='both', which='major', labelsize=45)
plt.ylabel('TTR', fontsize=45)
ax.set_yticks(ticks=[0,0.05,0.10,0.15,0.20,0.25,0.30,0.35,0.40,0.45])
ax.set_xticks(index + bar_width/2)
ax.set_xticklabels(['\nFinnish\n(0.10 M)', '\nEstonian\n(0.10 M)','\nCzech\n(0.11 M)','\nSlovak\n(0.11 M)','\nEnglish\n(0.15 M)','\nSpanish\n(0.16 M)'], fontsize=55)
ax.legend(fontsize=45)
plt.savefig('tsd1030b.eps', format ='eps', dpi =800)